# Karyawan A
annotate("segment", x=12, xend=12.15, colour="grey", size=0.5,
y=tabel$Karyawan.A[12], yend=tabel$Karyawan.A[12]-1.5) +
annotate("text", x=12.2, y=tabel$Karyawan.A[12]-1,
hjust=0, colour="grey", label="Karyawan A") +
annotate("text", x=12.2, y=tabel$Karyawan.A[12]-2,
hjust=0, colour="grey", size=3,
label=paste("avg:", toString(mean(tabel$Karyawan.A)))) +
# Karyawan B
annotate("segment", x=12, xend=12.15, colour="grey", size=0.5,
y=tabel$Karyawan.B[12], yend=tabel$Karyawan.B[12]+1.5) +
annotate("text", x=12.2, y=tabel$Karyawan.B[12]+2,
hjust=0, colour="grey", label="Karyawan B") +
annotate("text", x=12.2, y=tabel$Karyawan.B[12]+1,
hjust=0, colour="grey", size=3,
label=paste("avg:", toString(mean(tabel$Karyawan.B)))) +
# Karyawan C
annotate("segment", x=12, xend=12.15, colour="grey", size=0.5,
y=tabel$Karyawan.C[12], yend=tabel$Karyawan.C[12]+1.5) +
annotate("text", x=12.2, y=tabel$Karyawan.C[12]+2,
hjust=0, colour="grey", label="Karyawan C") +
annotate("text", x=12.2, y=tabel$Karyawan.C[12]+1,
hjust=0, colour="grey", size=3,
label=paste("avg:", toString(mean(tabel$Karyawan.C)))) +
# Karyawan D
annotate("segment", x=12, xend=12.15, colour="grey", size=0.5,
y=tabel$Karyawan.D[12], yend=tabel$Karyawan.D[12]-1.5) +
annotate("text", x=12.2, y=tabel$Karyawan.D[12]-1,
hjust=0, colour="grey", label="Karyawan D") +
annotate("text", x=12.2, y=tabel$Karyawan.D[12]-2,
hjust=0, colour="grey", size=3,
label=paste("avg:", toString(mean(tabel$Karyawan.D)))) +
# Karyawan E
annotate("segment", x=12, xend=12.15, colour="darkblue", size=0.5,
y=tabel$Karyawan.E[12], yend=tabel$Karyawan.E[12]+0.5) +
annotate("text", x=12.2, y=tabel$Karyawan.E[12]+1,
hjust=0, colour="darkblue", label="Karyawan E") +
annotate("text", x=12.2, y=tabel$Karyawan.E[12],
hjust=0, colour="darkblue", size=3,
label=paste("avg:", toString(mean(tabel$Karyawan.E)))) +
labs(x = "", y = "Jumlah produk (ribuan)\n",
title = "Best Employee 2019",
subtitle = "Lima karyawan dengan produktivitas tertinggi") +
theme(axis.text = element_text(size = 10),
axis.ticks.x = element_blank(),
plot.title = element_text(hjust = 0, size = 18, face="bold"),
panel.background = element_rect(fill = "white"))
library(dplyr)
library(ggplot2)
tabel <- read.csv('C:/Users/ARY - PC/Downloads/lo5_m01_mp02.csv')%>
mutate(Bulan = substr(Bulan, 1, 3),
Karyawan.A = Karyawan.A/1000,
Karyawan.B = Karyawan.B/1000,
Karyawan.C = Karyawan.C/1000,
Karyawan.D = Karyawan.D/1000,
Karyawan.E = Karyawan.E/1000)
plt <- ggplot(data = tabel,
aes(x = factor(tabel$Bulan, levels = tabel$Bulan))) +
geom_line(aes(y = Karyawan.A, group=1,
colour = "Karyawan A"),
colour = "gray",
size = 1) +
geom_line(aes(y = Karyawan.B, group=1),
colour = "gray",
size = 1.25) +
geom_line(aes(y = Karyawan.C, group=1),
colour = "gray",
size = 0.75) +
geom_line(aes(y = Karyawan.D, group=1),
colour = "gray",
size = 1.5) +
geom_line(aes(y = Karyawan.E, group=1),
colour = "darkblue",
size = 2) +
ylim(10, 40) +
# Produktivitas tertinggi
annotate("segment", x=8.5, xend=9, y=38, yend=max(tabel$Karyawan.E),
colour="darkblue", size=0.5) +
annotate("text", x=7.5, 38, size=3, hjust=0, colour="darkblue",
label=paste("Produktivitas\ntertinggi\n",
toString(max(tabel$Karyawan.E)))) +
# Karyawan A
annotate("segment", x=12, xend=12.15, colour="grey", size=0.5,
y=tabel$Karyawan.A[12], yend=tabel$Karyawan.A[12]-1.5) +
annotate("text", x=12.2, y=tabel$Karyawan.A[12]-1,
hjust=0, colour="grey", label="Karyawan A") +
annotate("text", x=12.2, y=tabel$Karyawan.A[12]-2,
hjust=0, colour="grey", size=3,
label=paste("avg:", toString(mean(tabel$Karyawan.A)))) +
# Karyawan B
annotate("segment", x=12, xend=12.15, colour="grey", size=0.5,
y=tabel$Karyawan.B[12], yend=tabel$Karyawan.B[12]+1.5) +
annotate("text", x=12.2, y=tabel$Karyawan.B[12]+2,
hjust=0, colour="grey", label="Karyawan B") +
annotate("text", x=12.2, y=tabel$Karyawan.B[12]+1,
hjust=0, colour="grey", size=3,
label=paste("avg:", toString(mean(tabel$Karyawan.B)))) +
# Karyawan C
annotate("segment", x=12, xend=12.15, colour="grey", size=0.5,
y=tabel$Karyawan.C[12], yend=tabel$Karyawan.C[12]+1.5) +
annotate("text", x=12.2, y=tabel$Karyawan.C[12]+2,
hjust=0, colour="grey", label="Karyawan C") +
annotate("text", x=12.2, y=tabel$Karyawan.C[12]+1,
hjust=0, colour="grey", size=3,
label=paste("avg:", toString(mean(tabel$Karyawan.C)))) +
# Karyawan D
annotate("segment", x=12, xend=12.15, colour="grey", size=0.5,
y=tabel$Karyawan.D[12], yend=tabel$Karyawan.D[12]-1.5) +
annotate("text", x=12.2, y=tabel$Karyawan.D[12]-1,
hjust=0, colour="grey", label="Karyawan D") +
annotate("text", x=12.2, y=tabel$Karyawan.D[12]-2,
hjust=0, colour="grey", size=3,
label=paste("avg:", toString(mean(tabel$Karyawan.D)))) +
# Karyawan E
annotate("segment", x=12, xend=12.15, colour="darkblue", size=0.5,
y=tabel$Karyawan.E[12], yend=tabel$Karyawan.E[12]+0.5) +
annotate("text", x=12.2, y=tabel$Karyawan.E[12]+1,
hjust=0, colour="darkblue", label="Karyawan E") +
annotate("text", x=12.2, y=tabel$Karyawan.E[12],
hjust=0, colour="darkblue", size=3,
label=paste("avg:", toString(mean(tabel$Karyawan.E)))) +
labs(x = "", y = "Jumlah produk (ribuan)\n",
title = "Best Employee 2019",
subtitle = "Lima karyawan dengan produktivitas tertinggi") +
theme(axis.text = element_text(size = 10),
axis.ticks.x = element_blank(),
plot.title = element_text(hjust = 0, size = 18, face="bold"),
panel.background = element_rect(fill = "white"))
options(repr.plt.width = 10, repr.plt.height = 1)
plt
library("dplyr", lib.loc="D:/R-4.0.4/library")
library("ggplot2", lib.loc="D:/R-4.0.4/library")
library(dplyr)
library(ggplot2)
tabel <- read.csv('C:/Users/ARY - PC/Downloads/lo5_m01_mp02.csv')%>
mutate(Bulan = substr(Bulan, 1, 3),
Karyawan.A = Karyawan.A/1000,
Karyawan.B = Karyawan.B/1000,
Karyawan.C = Karyawan.C/1000,
Karyawan.D = Karyawan.D/1000,
Karyawan.E = Karyawan.E/1000)
plt <- ggplot(data = tabel,
aes(x = factor(tabel$Bulan, levels = tabel$Bulan))) +
geom_line(aes(y = Karyawan.A, group=1,
colour = "Karyawan A"),
colour = "gray",
size = 1) +
geom_line(aes(y = Karyawan.B, group=1),
colour = "gray",
size = 1.25) +
geom_line(aes(y = Karyawan.C, group=1),
colour = "gray",
size = 0.75) +
geom_line(aes(y = Karyawan.D, group=1),
colour = "gray",
size = 1.5) +
geom_line(aes(y = Karyawan.E, group=1),
colour = "darkblue",
size = 2) +
ylim(10, 40) +
# Produktivitas tertinggi
annotate("segment", x=8.5, xend=9, y=38, yend=max(tabel$Karyawan.E),
colour="darkblue", size=0.5) +
annotate("text", x=7.5, 38, size=3, hjust=0, colour="darkblue",
label=paste("Produktivitas\ntertinggi\n",
toString(max(tabel$Karyawan.E)))) +
# Karyawan A
annotate("segment", x=12, xend=12.15, colour="grey", size=0.5,
y=tabel$Karyawan.A[12], yend=tabel$Karyawan.A[12]-1.5) +
annotate("text", x=12.2, y=tabel$Karyawan.A[12]-1,
hjust=0, colour="grey", label="Karyawan A") +
annotate("text", x=12.2, y=tabel$Karyawan.A[12]-2,
hjust=0, colour="grey", size=3,
label=paste("avg:", toString(mean(tabel$Karyawan.A)))) +
# Karyawan B
annotate("segment", x=12, xend=12.15, colour="grey", size=0.5,
y=tabel$Karyawan.B[12], yend=tabel$Karyawan.B[12]+1.5) +
annotate("text", x=12.2, y=tabel$Karyawan.B[12]+2,
hjust=0, colour="grey", label="Karyawan B") +
annotate("text", x=12.2, y=tabel$Karyawan.B[12]+1,
hjust=0, colour="grey", size=3,
label=paste("avg:", toString(mean(tabel$Karyawan.B)))) +
# Karyawan C
annotate("segment", x=12, xend=12.15, colour="grey", size=0.5,
y=tabel$Karyawan.C[12], yend=tabel$Karyawan.C[12]+1.5) +
annotate("text", x=12.2, y=tabel$Karyawan.C[12]+2,
hjust=0, colour="grey", label="Karyawan C") +
annotate("text", x=12.2, y=tabel$Karyawan.C[12]+1,
hjust=0, colour="grey", size=3,
label=paste("avg:", toString(mean(tabel$Karyawan.C)))) +
# Karyawan D
annotate("segment", x=12, xend=12.15, colour="grey", size=0.5,
y=tabel$Karyawan.D[12], yend=tabel$Karyawan.D[12]-1.5) +
annotate("text", x=12.2, y=tabel$Karyawan.D[12]-1,
hjust=0, colour="grey", label="Karyawan D") +
annotate("text", x=12.2, y=tabel$Karyawan.D[12]-2,
hjust=0, colour="grey", size=3,
label=paste("avg:", toString(mean(tabel$Karyawan.D)))) +
# Karyawan E
annotate("segment", x=12, xend=12.15, colour="darkblue", size=0.5,
y=tabel$Karyawan.E[12], yend=tabel$Karyawan.E[12]+0.5) +
annotate("text", x=12.2, y=tabel$Karyawan.E[12]+1,
hjust=0, colour="darkblue", label="Karyawan E") +
annotate("text", x=12.2, y=tabel$Karyawan.E[12],
hjust=0, colour="darkblue", size=3,
label=paste("avg:", toString(mean(tabel$Karyawan.E)))) +
labs(x = "", y = "Jumlah produk (ribuan)\n",
title = "Best Employee 2019",
subtitle = "Lima karyawan dengan produktivitas tertinggi") +
theme(axis.text = element_text(size = 10),
axis.ticks.x = element_blank(),
plot.title = element_text(hjust = 0, size = 18, face="bold"),
panel.background = element_rect(fill = "white"))
options(repr.plt.width = 10, repr.plt.height = 1)
plt
library(openxlsx)
library(C50)
#mempersiapkan data
dataCreditRating <- read.xlsx("C:/Users/ARY - PC/Downloads/dataCreditRating.xlsx", sep='t')
str(dataCreditRating)
dataCreditRating$risk_rating <- as.factor(dataCreditRating$risk_rating)
str(dataCreditRating)
#Menghilangkan beberapa variable input dari dataset
input_columns <- c("durasi_pinjaman_bulan", "jumlah_tanggungan")
datafeed <- dataCreditRating[ , input_columns ]
str(datafeed)
#Mempersiapkan porsi index acak untuk training dan testing set
set.seed(100)
index_training_set <- sample(900, 800)
#Membuat dan menampilkan training set dan testing set
input_training_set <- datafeed[index_training_set,]
class_training_set <- dataCreditRating[index_training_set,]$risk_rating
input_testing_set <- datafeed[-index_training_set,]
str(input_training_set)
str(class_training_set)
str(input_testing_set)
#menghasilkan dan menampilkan summary model
risk_rating_model <- C5.0(input_training_set, class_training_set, control = C5.0Control(label="Risk Rating"))
summary(risk_rating_model)
plot(risk_rating_model)
#menyimpan hasil prediksi testing set ke dalam kolom hasil_prediksi
input_testing_set$risk_rating <- dataCreditRating[-indeks_training_set,]$risk_rating
input_testing_set$hasil_prediksi <- predict(risk_rating_model, input_testing_set)
print(input_testing_set)
#Menghitung jumlah prediksi yang benar
nrow(input_testing_set[input_testing_set$risk_rating==input_testing_set$hasil_prediksi,])
nrow(input_testing_set[input_testing_set$risk_rating!=input_testing_set$hasil_prediksi,])
data_transaksi <- read.delim("C:/Users/ARY - PC/Pictures/data_transaksi.txt", comment.char="#")
View(data_transaksi)
View(data_transaksi)
library("readr", lib.loc="D:/R-4.0.4/library")
library(readr)
transaksi_tabular <- read.csv('C:/Users/ARY - PC/Pictures/data_transaksi.txt' sep=\t)
print(transaksi_tabular)
library(readr)
transaksi_tabular <- read.csv('C:/Users/ARY - PC/Pictures/data_transaksi.txt' sep=\t)
print(transaksi_tabular)
library(readr)
transaksi_tabular <- read.csv('C:/Users/ARY - PC/Pictures/data_transaksi.txt' sep='\t')
print(transaksi_tabular)
library(readr)
transaksi_tabular <- read.csv('C:/Users/ARY - PC/Pictures/data_transaksi.txt', sep="\t")
print(transaksi_tabular)
install.packages("arules")
library("arules", lib.loc="D:/R-4.0.4/library")
library(readr)
library(arules)
transaksi_tabular <- read.csv('C:/Users/ARY - PC/Pictures/data_transaksi.txt', sep="\t")
print(transaksi_tabular)
library(readr)
library(arules)
transaksi_tabular <- read.csv('C:/Users/ARY - PC/Pictures/data_transaksi.txt', sep="\t")
print(transaksi_tabular)
read.transactions(file='C:/Users/ARY - PC/Pictures/data_transaksi.txt', sep='\t,', format = "single", cols = c(1,2), skip = 1)
library(readr)
library(arules)
transaksi_tabular <- read.csv('C:/Users/ARY - PC/Pictures/data_transaksi.txt', sep="\t")
print(transaksi_tabular)
transaksi_tabular1 <- read.transactions(file='C:/Users/ARY - PC/Pictures/data_transaksi.txt', sep='\t,', format = "single", cols = c(1,2), skip = 1)
print(transaksi_tabular1)
library(readr)
library(arules)
transaksi_tabular <- read.csv('C:/Users/ARY - PC/Pictures/data_transaksi.txt', sep="\t")
print(transaksi_tabular)
transaksi_tabular1 <- read.transactions(file='C:/Users/ARY - PC/Pictures/data_transaksi.txt', format="single", sep="\t", cols=c(1,2), skip=1)
library(readr)
library(arules)
transaksi_tabular <- read.csv('C:/Users/ARY - PC/Pictures/data_transaksi.txt', sep="\t")
print(transaksi_tabular)
transaksi_tabular1 <- read.transactions(file='C:/Users/ARY - PC/Pictures/data_transaksi.txt', format="single", sep="\t", cols=c(1,2), skip=1)
print(transaksi_tabular1)
library(readr)
library(arules)
transaksi_tabular <- read.csv('C:/Users/ARY - PC/Pictures/data_transaksi.txt', sep="\t")
print(transaksi_tabular)
transaksi <- read.transactions(file='C:/Users/ARY - PC/Pictures/data_transaksi.txt', format="single", sep="\t", cols=c(1,2), skip=1)
print(transaksi)
#menampilkan transaksi
transaksi@iteminfo
library(readr)
library(arules)
transaksi_tabular <- read.csv('C:/Users/ARY - PC/Pictures/data_transaksi.txt', sep="\t")
print(transaksi_tabular)
transaksi <- read.transactions(file='C:/Users/ARY - PC/Pictures/data_transaksi.txt', format="single", sep="\t", cols=c(1,2), skip=1)
print(transaksi)
#menampilkan transaksi
transaksi@itemInfo
library(readr)
library(arules)
transaksi_tabular <- read.csv('C:/Users/ARY - PC/Pictures/data_transaksi.txt', sep="\t")
print(transaksi_tabular)
transaksi <- read.transactions(file='C:/Users/ARY - PC/Pictures/data_transaksi.txt', format="single", sep="\t", cols=c(1,2), skip=1)
print(transaksi)
#menampilkan transaksi
transaksi@itemInfo
#menampilkan kode transaksi
transaksi@itemsetInfo
library(readr)
library(arules)
transaksi_tabular <- read.csv('C:/Users/ARY - PC/Pictures/data_transaksi.txt', sep="\t")
print(transaksi_tabular)
transaksi <- read.transactions(file='C:/Users/ARY - PC/Pictures/data_transaksi.txt', format="single", sep="\t", cols=c(1,2), skip=1)
print(transaksi)
#menampilkan transaksi
transaksi@itemInfo
#menampilkan kode transaksi
transaksi@itemsetInfo
#menampilkan frequensi
itemFrequency(transaksi, type="absolute")
library(readr)
library(arules)
transaksi_tabular <- read.csv('C:/Users/ARY - PC/Pictures/data_transaksi.txt', sep="\t")
print(transaksi_tabular)
transaksi <- read.transactions(file='C:/Users/ARY - PC/Pictures/data_transaksi.txt', format="single", sep="\t", cols=c(1,2), skip=1)
print(transaksi)
#menampilkan transaksi
transaksi@itemInfo
#menampilkan kode transaksi
transaksi@itemsetInfo
#menampilkan frequensi
data_item <-itemFrequency(transaksi, type="absolute")
#Melakukan sorting pada data_item
data_item <- sort(data_item, decreasing = TRUE)
data_item
library(readr)
library(arules)
transaksi_tabular <- read.csv('C:/Users/ARY - PC/Pictures/data_transaksi.txt', sep="\t")
print(transaksi_tabular)
transaksi <- read.transactions(file='C:/Users/ARY - PC/Pictures/data_transaksi.txt', format="single", sep="\t", cols=c(1,2), skip=1)
print(transaksi)
#menampilkan transaksi
transaksi@itemInfo
#menampilkan kode transaksi
transaksi@itemsetInfo
#menampilkan frequensi
data_item <-itemFrequency(transaksi, type="absolute")
#Melakukan sorting pada data_item
data_item <- sort(data_item, decreasing = TRUE)
#Mengambil 3 item pertama
data_item <- data_item[1:3]
#Konversi data_item menjadi data frame dengan kolom Nama_Produk dan Jumlah
data_item <- data.frame("Nama Produk"=names(data_item), "Jumlah"=data_item, row.names=NULL)
print(data_item)
print(data_item)
library(readr)
library(arules)
transaksi_tabular <- read.csv('C:/Users/ARY - PC/Pictures/data_transaksi.txt', sep="\t")
print(transaksi_tabular)
transaksi <- read.transactions(file='C:/Users/ARY - PC/Pictures/data_transaksi.txt', format="single", sep="\t", cols=c(1,2), skip=1)
print(transaksi)
#menampilkan transaksi
transaksi@itemInfo
#menampilkan kode transaksi
transaksi@itemsetInfo
#menampilkan frequensi
data_item <-itemFrequency(transaksi, type="absolute")
#Melakukan sorting pada data_item
data_item <- sort(data_item, decreasing = TRUE)
#Mengambil 3 item pertama
data_item <- data_item[1:3]
#Konversi data_item menjadi data frame dengan kolom Nama_Produk dan Jumlah
data_item <- data.frame("Nama Produk"=names(data_item), "Jumlah"=data_item, row.names=NULL)
print(data_item)
#Menulis File Statistik Top 3
write.csv(data_item, file="top3_item_retail.txt",eol="\r\n")
itemFrequencyPlot(transaksi)
inspect(transaksi)
apriori(transaksi)
inspect(mba)
library(readr)
library(arules)
transaksi_tabular <- read.csv('C:/Users/ARY - PC/Pictures/data_transaksi.txt', sep="\t")
print(transaksi_tabular)
transaksi <- read.transactions(file='C:/Users/ARY - PC/Pictures/data_transaksi.txt', format="single", sep="\t", cols=c(1,2), skip=1)
print(transaksi)
#menampilkan transaksi
transaksi@itemInfo
#menampilkan kode transaksi
transaksi@itemsetInfo
#menampilkan frequensi
data_item <-itemFrequency(transaksi, type="absolute")
#Melakukan sorting pada data_item
data_item <- sort(data_item, decreasing = TRUE)
#Mengambil 3 item pertama
data_item <- data_item[1:3]
#Konversi data_item menjadi data frame dengan kolom Nama_Produk dan Jumlah
data_item <- data.frame("Nama Produk"=names(data_item), "Jumlah"=data_item, row.names=NULL)
print(data_item)
#Menulis File Statistik Top 3
write.csv(data_item, file="top3_item_retail.txt",eol="\r\n")
itemFrequencyPlot(transaksi)
inspect(transaksi)
mba <- apriori(transaksi)
inspect(mba)
#Filter rhs dengan item "Sirup" dan tampilkan
inspect(subset(mba, rhs %in% "Sirup"))
#Filter lhs
inspect(subset(mba, lhs %in% "Gula"))
#filter lhs & rhs
inspect(subset(mba,lhs %in% "Pet Food" & rhs %in% "Sirup"))
inspect(mba)
library(readr)
library(arules)
transaksi_tabular <- read.csv('C:/Users/ARY - PC/Pictures/data_transaksi.txt', sep="\t")
print(transaksi_tabular)
transaksi <- read.transactions(file='C:/Users/ARY - PC/Pictures/data_transaksi.txt', format="single", sep="\t", cols=c(1,2), skip=1)
print(transaksi)
#menampilkan transaksi
transaksi@itemInfo
#menampilkan kode transaksi
transaksi@itemsetInfo
#menampilkan frequensi
data_item <-itemFrequency(transaksi, type="absolute")
#Melakukan sorting pada data_item
data_item <- sort(data_item, decreasing = TRUE)
#Mengambil 3 item pertama
data_item <- data_item[1:3]
#Konversi data_item menjadi data frame dengan kolom Nama_Produk dan Jumlah
data_item <- data.frame("Nama Produk"=names(data_item), "Jumlah"=data_item, row.names=NULL)
print(data_item)
#Menulis File Statistik Top 3
write.csv(data_item, file="top3_item_retail.txt",eol="\r\n")
itemFrequencyPlot(transaksi)
inspect(transaksi)
mba <- apriori(transaksi,parameter = list(supp = 0.1, confidence = 0.5))
inspect(mba)
inspect(subset(mba, lhs %in% "Teh Celup" | rhs %in% "Teh Celup"))
inspect(subset(mba,(lhs %in% "Teh Celup" | rhs %in% "Teh Celup") & lift>1))
inspect(subset(mba,(lhs %ain% c("Pet Food", "Gula"))))
plot(subset(mba, lift>1.1), method="graph")
library(readr)
library(arules)
transaksi_tabular <- read.csv('C:/Users/ARY - PC/Pictures/data_transaksi.txt', sep="\t")
print(transaksi_tabular)
transaksi <- read.transactions(file='C:/Users/ARY - PC/Pictures/data_transaksi.txt', format="single", sep="\t", cols=c(1,2), skip=1)
print(transaksi)
#menampilkan transaksi
transaksi@itemInfo
#menampilkan kode transaksi
transaksi@itemsetInfo
#menampilkan frequensi
data_item <-itemFrequency(transaksi, type="absolute")
#Melakukan sorting pada data_item
data_item <- sort(data_item, decreasing = TRUE)
#Mengambil 3 item pertama
data_item <- data_item[1:3]
#Konversi data_item menjadi data frame dengan kolom Nama_Produk dan Jumlah
data_item <- data.frame("Nama Produk"=names(data_item), "Jumlah"=data_item, row.names=NULL)
print(data_item)
#Menulis File Statistik Top 3
write.csv(data_item, file="top3_item_retail.txt",eol="\r\n")
itemFrequencyPlot(transaksi)
inspect(transaksi)
mba <- apriori(transaksi,parameter = list(supp = 0.1, confidence = 0.5))
inspect(mba)
inspect(subset(mba, lhs %in% "Teh Celup" | rhs %in% "Teh Celup"))
inspect(subset(mba,(lhs %in% "Teh Celup" | rhs %in% "Teh Celup") & lift>1))
inspect(subset(mba,(lhs %ain% c("Pet Food", "Gula"))))
plot(subset(mba, lift>1.1), method="graph")
View(data_transaksi)
library("readr", lib.loc="D:/R-4.0.4/library")
library("arules", lib.loc="D:/R-4.0.4/library")
library(readr)
library(arules)
transaksi_tabular <- read.csv('C:\Users\ARY - PC\OBJECT ORIENTED PROGRAMING\DATA\data_transaksi.txt', sep="\t")
print(transaksi_tabular)
transaksi <- read.transactions(file='C:\Users\ARY - PC\OBJECT ORIENTED PROGRAMING\DATA\data_transaksi.txt', format="single", sep="\t", cols=c(1,2), skip=1)
print(transaksi)
#menampilkan transaksi
transaksi@itemInfo
#menampilkan kode transaksi
transaksi@itemsetInfo
#menampilkan frequensi
data_item <-itemFrequency(transaksi, type="absolute")
#Melakukan sorting pada data_item
data_item <- sort(data_item, decreasing = TRUE)
#Mengambil 3 item pertama
data_item <- data_item[1:3]
#Konversi data_item menjadi data frame dengan kolom Nama_Produk dan Jumlah
data_item <- data.frame("Nama Produk"=names(data_item), "Jumlah"=data_item, row.names=NULL)
print(data_item)
#Menulis File Statistik Top 3
write.csv(data_item, file="top3_item_retail.txt",eol="\r\n")
itemFrequencyPlot(transaksi)
inspect(transaksi)
mba <- apriori(transaksi,parameter = list(supp = 0.1, confidence = 0.5))
inspect(mba)
inspect(subset(mba, lhs %in% "Teh Celup" | rhs %in% "Teh Celup"))
inspect(subset(mba,(lhs %in% "Teh Celup" | rhs %in% "Teh Celup") & lift>1))
inspect(subset(mba,(lhs %ain% c("Pet Food", "Gula"))))
plot(subset(mba, lift>1.1), method="graph")
q()
